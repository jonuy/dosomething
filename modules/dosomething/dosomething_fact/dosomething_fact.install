<?php
/**
 * @file
 * Installation and schema hooks for dosomething_fact.module.
 */

/**
 * Implements hook_schema().
 */
function dosomething_fact_schema() {
  $schema = array();
  $schema['dosomething_fact'] = array(
    'description' => 'The base table for the Fact entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Fact entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fact' => array(
        'description' => 'Fact copy.',
        'type' => 'text',
        'length' => '2048',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that owns this campaign; initially, this is the user that created it.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'Boolean indicating whether the campaign is published (visible to non-administrators).',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the campaign was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the campaign was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'source' => array(
        'description' => 'Description of source.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'url_source' => array(
        'description' => 'URL of source.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),  
    ),
    'primary key' => array('id'),
  );
  return $schema;
}
