<?php
/**
 * @file
 * Provides a Campaign custom entity type named 'campaign'.
 */
define('DOSOMETHING_CAMPAIGN_FORM_DESC_PREFIX', 'dosomething_campaign_form_desc_');
/**
 * Implements hook_entity_info().
 */
function dosomething_campaign_entity_info() {
  $info = array();
  $info['campaign'] = array(
    'label' => t('Campaign'),
    'base table' => 'dosomething_campaign',
    'entity keys' => array(
      'id' => 'id',
      'label' => 'title',
    ),
    'entity class' => 'CampaignEntity',
    'uri callback' => 'entity_class_uri',
    'controller class' => 'CampaignEntityController',
    'admin ui' => array(
       'path' => 'admin/campaign',
       'controller class' => 'CampaignEntityUIController',
       'menu wildcard' => '%campaign',
       'file' => 'dosomething_campaign.admin.inc',
     ),
     'module' => 'dosomething_campaign',
     // Controls who can access entity CRUD.
     'access callback' => 'dosomething_campaign_access',
  );
  return $info;
}

/**
 * Implements hook_menu().
 */
function dosomething_campaign_menu() {
  $items = array();
  $items['campaign/%campaign'] = array(
    'title callback' => 'dosomething_campaign_page_title',
    'title arguments' => array(1),
    'page callback' => 'dosomething_campaign_view_entity',
    'page arguments' => array(1),
    'access callback' => TRUE,
  );
  $items['admin/config/dosomething/dosomething_campaign'] = array(
    'title' => 'DoSomething Campaign Settings',
    'description' => t('Configure DoSomething Campaign settings.'),
    'access arguments' => array('administer modules'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dosomething_campaign_admin_settings_form'),
    'file' => 'dosomething_campaign.admin.inc',
  );
  return $items;
}

/**
 * Title callback: Returns the title of the campaign.
 *
 * @param $node
 *   The node object.
 *
 * @return
 *   An unsanitized string that is the title of the campaign.
 *
 * @see dosomething_campaign_menu()
 */
function dosomething_campaign_page_title($campaign) {
  return $campaign->title;
}

/**
 * Access callback for CampaignEntity CRUD operations.
 */
function dosomething_campaign_access($op, $dosomething_campaign = NULL, $account = NULL) {
  return TRUE;
}

/**
 * Menu autoloader for /campaign.
 */
function campaign_load($id) {
  $campaign = entity_load('campaign', array($id));
  return array_pop($campaign);
}

/**
 * Callback for /campaign/ID page.
 *
 * Just a place to render a complete campaign entity.
 */
function dosomething_campaign_view_entity($campaign) {
  return entity_view('campaign', array($campaign->id => $campaign));
}
